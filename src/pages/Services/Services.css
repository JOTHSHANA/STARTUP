@property --p {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

@property --v {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

:root {
  --background-primary: #1a202c;
  --background-secondary: #2d3748;
  --text-primary: #e2e8f0;
  --text-secondary: #a0aec0;
  --accent-primary: #63b3ed;
}

.services-page-container {
  width: 100vw;
  min-height: 100vh;
  padding: 4rem 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  overflow: hidden;
  background-color: var(--background-primary);
}

.services-main-title {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.debug-index-display {
  background: #ffc107;
  color: black;
  padding: 5px 10px;
  border-radius: 5px;
  /* margin-bottom: 2rem; */
  font-family: monospace;
}

.services-carousel {
  --t: 0.8s;
  --p: var(--k);
  --abs-p: max(var(--k) - var(--p), var(--p) - var(--k));
  --end: clamp(0, var(--abs-p) - 1, 1);
  --dir: calc((1 - 2 * var(--end)) * sign(var(--k) - var(--p)));
  --fwd: calc(0.5 * (1 + var(--dir)));
  --v: var(--k);
  --abs-v: max(var(--v) - var(--p), var(--p) - var(--v));
  --prg: calc(var(--abs-v) / (1 - var(--end) + var(--end) * (var(--n) - 1)));

  /* CONVERTED TO FLEXBOX */
  display: flex;
  flex-direction: row;
  width: 100%;
  max-width: 900px;
  gap: 5rem;
  align-items: center;
  color: var(--text-primary);
  transition: --p 0s var(--t), --v var(--t);
  min-height: 400px;
  background-color: var(--background-secondary);
  /* padding: 40px; */
  border-radius: 10px;
  /* margin: 40px; */
  padding: 50px;
}

/* Left Column for Cards */
.card-stack-container {
  /* This is now a flex item */
  flex: 1;
  /* Defines its proportion of the space */
  min-width: 250px;

  /* Internal grid for stacking cards remains the same */
  display: grid;
  place-items: center;
  height: 15em;
  /* Give container a height to align with */
}

/* Right Column for Content & Nav */
.right-column-container {
  /* This is the new flex item wrapper */
  flex: 2;
  /* Takes up twice the space of the card column */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  /* Aligns content and nav to the left */
  gap: 1.5rem;
  /* Space between content and nav */
}

/* --- Card Animation Styles (Unchanged) --- */
.service-article {
  --abs-top: max(var(--k) - var(--i), var(--i) - var(--k));
  --not-top: min(1, var(--abs-top));
  --top: calc(1 - var(--not-top));
  --val-mov: ((1 - var(--fwd)) * var(--p) + var(--fwd) * var(--k) - var(--i));
  --abs-mov: max(var(--val-mov), -1 * var(--val-mov));
  --not-mov: min(1, var(--abs-mov));
  --mov: calc(1 - var(--not-mov));

  /* Stacks all articles inside the card-stack-container */
  grid-area: 1 / 1 / -1 / -1;
  z-index: calc(var(--n) - var(--abs-top));
  transition: z-index var(--t) cubic-bezier(1, -0.9, 0, 1.9);
}

.service-icon-card {
  --sin: sin(var(--prg) * 0.5turn);
  display: grid;
  place-items: center;
  border: 2px solid var(--accent-primary);
  height: 15em;
  aspect-ratio: 1;
  border-radius: 1rem;
  position: relative;

  transform: translate(calc(-150% * var(--mov) * sqrt(var(--sin)))) rotate(calc((1 - var(--sin)) * var(--a)));

  background-color: color-mix(in srgb, var(--accent-primary) calc(var(--top) * 100%), var(--background-secondary));
  transition: transform 0.2s, background-color 0.8s;
}

.card-debug-letter,
.icon-container {
  position: absolute;
  transition: color 0.8s;
  color: color-mix(in srgb, var(--background-secondary) calc(var(--top) * 100%), var(--accent-primary));
}

.card-debug-letter {
  font-size: 3rem;
  font-weight: bold;
  z-index: 10;
}

.icon-container {
  opacity: 0.2;
}

.icon-container .MuiSvgIcon-root {
  font-size: 6rem;
  color: inherit;
}

/* --- Content and Nav Styles (Mostly Unchanged) --- */
.service-content {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  text-align: left;
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.service-content h2 {
  font-size: 2.2rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.service-content p {
  font-size: 1rem;
  margin-bottom: 1.5rem;
  max-width: 450px;
  color: var(--text-secondary);
}

.tech-stack {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tech-badge {
  background-color: var(--background-secondary);
  border: 1px solid var(--accent-primary);
  color: var(--text-primary);
  padding: 0.4rem 0.9rem;
  border-radius: 16px;
  font-size: 0.85rem;
}

.service-nav {
  display: flex;
  gap: 1em;
  z-index: 1000;
}

.service-nav button {
  --sgn: -1;
  --prc: calc(var(--hov, 0) * 100%);
  --c: color-mix(in hsl, var(--accent-primary) var(--prc), #52527a);
  display: grid;
  border: none;
  width: 3rem;
  aspect-ratio: 1;
  border-radius: 50%;
  background: rgba(82, 82, 122, 0.2);
  color: var(--accent-primary);
  cursor: pointer;
  transition: 0.3s ease-out;
  transition-property: background-color, color;
}

.service-nav button:hover,
.service-nav button:focus {
  --hov: 1;
  background-color: rgba(129, 140, 248, 0.3);
}

.service-nav button::before {
  content: '';
  place-self: center;
  border: solid 2px;
  border-width: 2px 2px 0 0;
  width: 35%;
  aspect-ratio: 1;
  transform: translateX(calc(var(--sgn) * -15%)) rotate(45deg) scale(var(--sgn));
}

.service-nav button[aria-label='next'] {
  --sgn: 1;
}

/* --- Footer Elements (Unchanged) --- */
.services-note,
.contact-button {
  margin-top: 1rem;
  text-decoration: none;
  transition: opacity 0.3s ease;
}

.services-note {
  color: var(--text-secondary);
}

.contact-button {
  padding: 0.7em 1.7em;
  font-size: 18px;
  /* float: left; */
  border-radius: 2px 20px 2px 20px;
  background: #e8e8e800;
  cursor: pointer;
  border: 1px solid #e8e8e800;
  transition: all 0.3s;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  background-color: #19c6d6;
}

.contact-button:hover {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.contact-button:active {
  color: #666;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.service-card-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 1rem;


  opacity: calc(var(--top) * 0.6 + 0.4);
  filter: grayscale(calc(1 - var(--top)));
}



.service-icon-card {
  /* display: grid; */
  border: 2px solid var(--accent-primary);
  height: 15em;
  aspect-ratio: 1;
  border-radius: 1rem;
  position: relative;

  /* transform: translate(calc(-150% * var(--mov) * sqrt(var(--sin)))) rotate(calc((1 - var(--sin)) * var(--a))); */

  /* REMOVE the background-color property to ensure the image is visible.
    The background is now the image itself.
  */
  /* background-color: color-mix(in srgb, var(--accent-primary) calc(var(--top) * 100%), var(--background-secondary)); */

  /* transition: transform 0.2s; */
  /* Removed background-color from transition */
}


.services-title {
  font-weight: 700;
  font-size: 34px;
  margin-bottom: 30px;
}
